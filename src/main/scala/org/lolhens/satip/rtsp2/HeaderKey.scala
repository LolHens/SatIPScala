package org.lolhens.satip.rtsp2

case class HeaderKey(name: String) {
  def apply(value: String): Header = Header(this, value)
}

object HeaderKey {
  val Accept = HeaderKey("Accept")
  val AcceptEncoding = HeaderKey("Accept-Encoding")
  val AcceptLanguage = HeaderKey("Accept-Language")
  val Allow = HeaderKey("Allow")
  val Authorization = HeaderKey("Authorization")
  val Bandwidth = HeaderKey("Bandwidth")
  val Blocksize = HeaderKey("Blocksize")
  val CacheControl = HeaderKey("Cache-Control")
  val Conference = HeaderKey("Conference")
  val Connection = HeaderKey("Connection")
  val ContentBase = HeaderKey("Content-Base")
  val ContentEncoding = HeaderKey("Content-Encoding")
  val ContentLanguage = HeaderKey("Content-Language")
  val ContentLength = HeaderKey("Content-Length")
  val ContentLocation = HeaderKey("Content-Location")
  val ContentType = HeaderKey("Content-Type")
  val CSeq = HeaderKey("CSeq")
  val Date = HeaderKey("Date")
  val Expires = HeaderKey("Expires")
  val From = HeaderKey("From")
  val IfModifiedSince = HeaderKey("If-Modified-Since")
  val LastModified = HeaderKey("Last-Modified")
  val ProxyAuthenticate = HeaderKey("Proxy-Authenticate")
  val ProxyRequire = HeaderKey("Proxy-Require")
  val Public = HeaderKey("Public")
  val Range = HeaderKey("Range")
  val Referer = HeaderKey("Referer")
  val Require = HeaderKey("Require")
  val RetryAfter = HeaderKey("Retry-After")
  val RTPInfo = HeaderKey("RTP-Info")
  val Scale = HeaderKey("Scale")
  val Session = HeaderKey("Session")
  val Server = HeaderKey("Server")
  val Speed = HeaderKey("Speed")
  val Transport = HeaderKey("Transport")
  val Unsupported = HeaderKey("Unsupported")
  val UserAgent = HeaderKey("User-Agent")
  val Via = HeaderKey("Via")
  val WWWAuthenticate = HeaderKey("WWW-Authenticate")
}
